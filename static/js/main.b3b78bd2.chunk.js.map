{"version":3,"sources":["axios.js","Row.js","request.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","url","isMain","useState","movies","setMovies","trailer","setTrailer","useEffect","a","instancea","get","responce","data","results","fetchData","handelClick","movie","movieTrailer","name","url1","serchParams","URLSearchParams","URL","search","console","log","className","map","mo","onClick","src","poster_path","alt","original_title","id","videoId","opts","width","height","API_KEY","request","fetchTrending","fetchOriginals","fetchTopRated","fetchAction","fetchComedy","fetchHorror","fetchRomance","fetchDocumentory","Banner","props","str","n","setMovie","res","ran","Math","floor","random","length","getData","style","backgroundImage","backdrop_path","backgroundPosition","overview","substr","Nav","App","request1","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b3b78bd2.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst instance = axios.create({\r\n    baseURL : \"https://api.themoviedb.org/3\"\r\n});\r\n\r\nexport default instance;","import React, { useEffect, useState } from 'react'\r\nimport instancea from './axios'\r\nimport YouTube from 'react-youtube';\r\nimport movieTrailer from 'movie-trailer';\r\nimport './row.css'\r\n/**\r\n* @author\r\n* @function Row\r\n**/\r\nconst base_url = \"https://image.tmdb.org/t/p/w500\";\r\nconst Row = ({title,url ,isMain}) => {\r\n    const[movies , setMovies] =useState([]);\r\n    const [trailer , setTrailer] = useState('');\r\n    const opt = {\r\n        width: \"100%\",\r\n        height : \"250\"\r\n    } \r\n    useEffect( ()=>{\r\n        async function fetchData(){\r\n            const responce = await instancea.get(url);\r\n            // console.log(responce);\r\n            setMovies(responce.data.results);\r\n        }\r\n        fetchData();\r\n    },[url])\r\n    const handelClick = async (movie) => {\r\n        if (trailer)\r\n        {\r\n            setTrailer('');\r\n\r\n        }\r\n        else\r\n        {   try{\r\n\r\n            const url1 = await movieTrailer(movie?.name || '');\r\n            const serchParams = new URLSearchParams( new URL(url1).search ).get('v');\r\n            if(serchParams) setTrailer(serchParams);\r\n        }\r\n        catch(e){\r\n            console.log(e);\r\n        }\r\n        }\r\n    }\r\n\r\n  return(\r\n    <div className=\"row_container\">\r\n        <h2>{title}</h2>\r\n        <div className=\"row_items\">\r\n            {movies.map((mo) => {\r\n                // console.log(mo   );\r\n                \r\n                return(\r\n                        <img \r\n                        onClick={() => handelClick(mo)}\r\n                        key={mo.id}\r\n                        className={isMain ? \"row_item row_main\" : \"row_item\"} \r\n                        src = {`${base_url}${mo.poster_path}`}\r\n                        alt={mo.original_title}/>\r\n\r\n                )\r\n            })}\r\n        </div>\r\n        {trailer && <YouTube videoId={trailer} opts={opt}/>}\r\n    </div>\r\n   )\r\n\r\n }\r\n\r\nexport default Row","const API_KEY = \"9ee7d4025353ca17d143cc05bf1b0eb7\";\r\n\r\nconst request = {\r\n    fetchTrending : `/trending/all/day?api_key=${API_KEY}`,\r\n    fetchOriginals : `/discover/tv?api_key=${API_KEY}&language=en-US&sort_by=popularity.desc&page=1&timezone=America%2FNew_York&include_null_first_air_dates=false&with_watch_monetization_types=flatrate`,\r\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US&page=1`,\r\n    fetchAction:`/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedy : `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorror:`/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomance : `/discover/movie?api_key=${API_KEY}&with_genres=10749` ,\r\n    fetchDocumentory: `/discover/movie?api_key=${API_KEY}&with_genres=99`  \r\n}\r\nexport default request;","import React, { useEffect, useState } from 'react'\r\nimport './ban.css'\r\nimport axios from './axios'\r\nconst API_KEY = \"9ee7d4025353ca17d143cc05bf1b0eb7\";\r\nconst base_url = \"https://image.tmdb.org/t/p/w500\";\r\n\r\n\r\nconst fetchOriginals = `/discover/tv?api_key=${API_KEY}&language=en-US&sort_by=popularity.desc&page=1&timezone=America%2FNew_York&include_null_first_air_dates=false&with_watch_monetization_types=flatrate`;\r\n/**\r\n* @author\r\n* @function Banner\r\n**/\r\n\r\nconst Banner = (props) => {\r\n    const [movie, setMovie] = useState({});\r\n    useEffect(() => {\r\n        async function getData() {\r\n            const res = await axios.get(fetchOriginals)\r\n            const data = res.data.results;\r\n            console.log(data);\r\n            const ran = Math.floor(Math.random() * (data.length))\r\n            setMovie(res.data.results[ran])\r\n        }\r\n        getData();\r\n    }, [])\r\n\r\n    function truncate(str , n){\r\n        return str?.length > n ? str.substr(0,n - 1) + \"...\" : str;\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <header className=\"ban_container\"\r\n            style={{\r\n                backgroundImage: `url(${base_url}${movie?.backdrop_path || movie.poster_path})`,\r\n                backgroundPosition: \"center center\"\r\n\r\n            }}>\r\n            <div className=\"banner\">\r\n\r\n                <h1 className=\"title\">\r\n                    {movie.name || movie.title}\r\n                </h1>\r\n                <div className=\"buttons\">\r\n                    <button className=\"ban_button\">Play</button>\r\n                    <button className=\"ban_button\">My List</button>\r\n                </div>\r\n                <div className=\"overview\">\r\n                    {truncate(movie.overview,200)}\r\n                </div>\r\n            </div>\r\n        </header>\r\n            <div className=\"blur\">\r\n\r\n            </div>\r\n        </>\r\n        \r\n    )\r\n\r\n}\r\n\r\nexport default Banner","import React from 'react'\r\nimport './nav.css'\r\n/**\r\n* @author\r\n* @function Nav\r\n**/\r\n\r\nconst Nav = (props) => {\r\n\r\n    \r\n    return (\r\n\r\n            <div className=\"nav\">\r\n                <div className=\"img\">\r\n\r\n                    <img src=\"https://assets.brand.microsites.netflix.io/assets/493f5bba-81a4-11e9-bf79-066b49664af6_cm_1440w.png?v=30\" alt=\"NETFLIX\" />\r\n                </div>\r\n            </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Nav","import './App.css';\nimport Row from './Row'\nimport request1 from './request'\nimport Banner from './Banner'\nimport Nav from './Nav'\nfunction App() {\n  return (\n    <>\n      <Nav />\n      <Banner />\n      <Row title=\"Netflix Originals\" url={request1.fetchOriginals} isMain />\n      <Row title=\"Trending Now\" url={request1.fetchTrending} />\n      <Row title=\"Top Rated\" url={request1.fetchTopRated} />\n      <Row title=\"Action Movies\" url={request1.fetchAction} />\n      <Row title=\"Comady Movies\" url={request1.fetchComedy} />\n      <Row title=\"Horror Movies\" url={request1.fetchHorror} />\n      <Row title=\"Romance Movies\" url={request1.fetchRomance} />\n      <Row title=\"Documentary Movies\" url={request1.fetchDocumentory} />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}